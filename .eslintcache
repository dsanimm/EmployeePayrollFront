[{"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\reportWebVitals.js":"1","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\App.js":"2","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx":"3","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\index.js":"4","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\PayrollService.js":"5","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\config\\config.js":"6","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\home\\home.jsx":"7","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\display\\display.jsx":"8","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\home\\header.jsx":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":824,"mtime":1606647534377,"results":"12","hashOfConfig":"11"},{"size":15221,"mtime":1606651331410,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"11"},{"size":745,"mtime":1610094852954,"results":"15","hashOfConfig":"11"},{"size":119,"mtime":1610081381073,"results":"16","hashOfConfig":"11"},{"size":2860,"mtime":1606632539873,"results":"17","hashOfConfig":"11"},{"size":3071,"mtime":1606653434379,"results":"18","hashOfConfig":"11"},{"size":470,"mtime":1606629857374,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hjzqon",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\reportWebVitals.js",[],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\App.js",["43"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PayrollForm from './components/payroll-form/payroll-form';\nimport Home from \"./components/home/home.jsx\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/payroll-form\">\n            <PayrollForm />\n          </Route>\n          <Route exact path=\"/payroll-form/:id\">\n            <PayrollForm />\n          </Route>\n          <Route exact path=\"\">\n            <Redirect exact from=\"/\" to=\"/home\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["44","45"],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport profile1 from \"../../assets/profile-images/Ellipse -3.png\";\r\nimport profile2 from \"../../assets/profile-images/Ellipse -1.png\";\r\nimport profile3 from \"../../assets/profile-images/Ellipse -8.png\";\r\nimport profile4 from \"../../assets/profile-images/Ellipse -7.png\";\r\nimport \"./payroll-form.scss\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport { useParams, Link, withRouter } from \"react-router-dom\";\r\nimport EmployeeService from \"../../PayrollService\"\r\n\r\nconst PayrollForm = (props) => {\r\n \r\n  let initialValue = {\r\n    name: \"\",\r\n    profileArray: [\r\n      { url: \"../../../assets/profile-images/Ellipse -3.png\" },\r\n      { url: \"../../../assets/profile-images/Ellipse -1.png\" },\r\n      { url: \"../../../assets/profile-images/Ellipse -8.png\" },\r\n      { url: \"../../../assets/profile-images/Ellipse -7.png\" },\r\n    ],\r\n    allDepartment: [\"HR\", \"Sales\", \"Finance\", \"Engineer\", \"Others\"],\r\n    departMentValue: [],\r\n    gender: \"\",\r\n    salary: \"\",\r\n    day: \"1\",\r\n    month: \"Jan\",\r\n    year: \"2020\",\r\n    startDate: \"\",\r\n    note: \"\",\r\n    id: \"\",\r\n    profilePic: \"\",\r\n    isUpdate: false,\r\n    error: {\r\n      department: \"\",\r\n      name: \"\",\r\n      gender: \"\",\r\n      salary: \"\",\r\n      profilePic: \"\",\r\n      startDate: \"\",\r\n    },\r\n  };\r\n  const [formValue, setForm] = useState(initialValue);\r\n  const params = useParams();\r\n  const employeeService = new EmployeeService();\r\n\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      getDataById(params.id);\r\n    }\r\n  }, []);\r\n\r\n  const getDataById = (id) => {\r\n    employeeService\r\n      .getEmployee(id)\r\n      .then((dat) => {\r\n        console.log(\"data is \", dat.data);\r\n        //let obj = data.data;\r\n        setData(dat.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err is \", err);\r\n      });\r\n  };\r\n\r\n  const setData = (obj) => {\r\n    let array = obj.data.startDate.split(\" \");\r\n    setForm({\r\n      ...formValue,\r\n      ...obj.data,\r\n      departMentValue: obj.data.departMent,\r\n      isUpdate: true,\r\n      day: array[0],\r\n      month: array[1],\r\n      year: array[2],\r\n    });\r\n  };\r\n  const changeValue = (event) => {\r\n    setForm({ ...formValue, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onCheckChange = (name) => {\r\n    let index = formValue.departMentValue.indexOf(name);\r\n    // setForm({ ...formValue, error: { department: 'department is not valid' } })\r\n    let checkArray = [...formValue.departMentValue];\r\n    if (index > -1) checkArray.splice(index, 1);\r\n    else checkArray.push(name);\r\n    setForm({ ...formValue, departMentValue: checkArray });\r\n  };\r\n  const getChecked = (name) => {\r\n    return (\r\n      formValue.departMentValue && formValue.departMentValue.includes(name)\r\n    );\r\n  };\r\n\r\n  const validData = async () => {\r\n    let isError = false;\r\n    let error = {\r\n      department: \"\",\r\n      name: \"\",\r\n      gender: \"\",\r\n      salary: \"\",\r\n      profilePic: \"\",\r\n      startDate: \"\",\r\n    };\r\n    if (formValue.name.length < 1) {\r\n      error.name = \"Name is a required field\";\r\n      isError = true;\r\n    }\r\n    if (formValue.gender.length < 1) {\r\n      error.gender = \"Gender is a required field\";\r\n      isError = true;\r\n    }\r\n    if (formValue.salary.length < 1) {\r\n      error.salary = \"Salary is a required field\";\r\n      isError = true;\r\n    }\r\n    if (formValue.profilePic.length < 1) {\r\n      error.profilePic = \"Profile Image is a required field\";\r\n      isError = true;\r\n    }\r\n\r\n   // if (formValue.departMentValue.length < 1) {\r\n    //  error.department = \"Department is a required field\";\r\n   //   isError = true;\r\n  //  }\r\n    await setForm({ ...formValue, error: error });\r\n    return isError;\r\n  };\r\n  const save = async (event) => {\r\n    event.preventDefault();\r\n    if (await validData()) {\r\n      console.log(\"error\", formValue);\r\n      return;\r\n    }\r\n    let object = {\r\n      name: formValue.name,\r\n      departMent: formValue.departMentValue,\r\n      gender: formValue.gender,\r\n      salary: formValue.salary,\r\n      startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n      note: formValue.note,\r\n      employeeId: params.id,\r\n      profilePic: formValue.profilePic,\r\n    };\r\n\r\n    if (formValue.isUpdate) {\r\n      employeeService\r\n        .updateEmployee(object)\r\n        .then((data) => {\r\n          console.log(\"data after update\", data);\r\n          props.history.push(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error after update\");\r\n        });\r\n    } else {\r\n      employeeService\r\n        .addEmployee(object)\r\n        .then((data) => {\r\n          console.log(\"Employee payroll added\");\r\n          props.history.push(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error occured while adding employee\");\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * description:- to reset the form value\r\n   */\r\n  const reset = () => {\r\n    setForm({\r\n      ...initialValue,\r\n      id: formValue.id,\r\n      isUpdate: formValue.isUpdate,\r\n    });\r\n\r\n    console.log(formValue);\r\n  };\r\n  return (\r\n    <div className=\"payroll-main\">\r\n      <header className=\"header row center\">\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"\" />\r\n          <div>\r\n            <span className=\"emp-text\">EMPLOYEE</span> <br />\r\n            <span className=\"emp-text emp-payroll\">PAYROLL</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"content\">\r\n        <form className=\"form\" action=\"#\" onSubmit={save}>\r\n          <div className=\"form-head\">Employee Payroll form</div>\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"name\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formValue.name}\r\n              onChange={changeValue}\r\n              placeholder=\"Enter Your name..\"\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.name} </div>\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"profilePic\">\r\n              Profile image\r\n            </label>\r\n            <div className=\"profile-radio-button\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={\r\n                    formValue.profilePic ===\r\n                    \"../../assets/profile-images/Ellipse -3.png\"\r\n                  }\r\n                  name=\"profilePic\"\r\n                  value=\"../../assets/profile-images/Ellipse -3.png\"\r\n                  onChange={changeValue}\r\n                />\r\n                <img className=\"profile\" src={profile1} alt=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"profilePic\"\r\n                  checked={\r\n                    formValue.profilePic ===\r\n                    \"../../assets/profile-images/Ellipse -1.png\"\r\n                  }\r\n                  value=\"../../assets/profile-images/Ellipse -1.png\"\r\n                  onChange={changeValue}\r\n                />\r\n                <img className=\"profile\" src={profile2} alt=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"profilePic\"\r\n                  checked={\r\n                    formValue.profilePic ===\r\n                    \"../../assets/profile-images/Ellipse -8.png\"\r\n                  }\r\n                  value=\"../../assets/profile-images/Ellipse -8.png\"\r\n                  onChange={changeValue}\r\n                />\r\n                <img className=\"profile\" src={profile3} alt=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"profilePic\"\r\n                  checked={\r\n                    formValue.profilePic ===\r\n                    \"../../assets/profile-images/Ellipse -7.png\"\r\n                  }\r\n                  value=\"../../assets/profile-images/Ellipse -7.png\"\r\n                  onChange={changeValue}\r\n                />\r\n                <img className=\"profile\" src={profile4} alt=\"profile\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.profilePic} </div>\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"gender\">\r\n              Gender\r\n            </label>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"male\"\r\n                checked={formValue.gender === \"male\"}\r\n                onChange={changeValue}\r\n                name=\"gender\"\r\n                value=\"male\"\r\n              />\r\n              <label className=\"text\" htmlFor=\"male\">\r\n                Male\r\n              </label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"female\"\r\n                checked={formValue.gender === \"female\"}\r\n                onChange={changeValue}\r\n                name=\"gender\"\r\n                value=\"female\"\r\n              />\r\n              <label className=\"text\" htmlFor=\"female\">\r\n                Female\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.gender} </div>\r\n\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"department\">\r\n              Department\r\n            </label>\r\n            <div>\r\n              {formValue.allDepartment.map((item) => (\r\n                <span key={item}>\r\n                  <input\r\n                    className=\"checkbox\"\r\n                    type=\"checkbox\"\r\n                    onChange={() => onCheckChange(item)}\r\n                    name={item}\r\n                    checked={getChecked(item)}\r\n                    value={item}\r\n                  />\r\n                  <label className=\"text\" htmlFor={item}>\r\n                    {item}\r\n                  </label>\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.department} </div>\r\n\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"salary\">\r\n              Salary\r\n            </label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={changeValue}\r\n              id=\"salary\"\r\n              value={formValue.salary}\r\n              name=\"salary\"\r\n              placeholder=\"Salary\"\r\n              required=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.salary} </div>\r\n\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"startDate\">\r\n              Start Date\r\n            </label>\r\n            <div>\r\n              <select\r\n                value={formValue.day}\r\n                onChange={changeValue}\r\n                id=\"day\"\r\n                name=\"day\"\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"11\">11</option>\r\n                <option value=\"12\">12</option>\r\n                <option value=\"13\">13</option>\r\n                <option value=\"14\">14</option>\r\n                <option value=\"15\">15</option>\r\n                <option value=\"16\">16</option>\r\n                <option value=\"17\">17</option>\r\n                <option value=\"18\">18</option>\r\n                <option value=\"19\">19</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"21\">21</option>\r\n                <option value=\"22\">22</option>\r\n                <option value=\"23\">23</option>\r\n                <option value=\"24\">24</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"26\">26</option>\r\n                <option value=\"27\">27</option>\r\n                <option value=\"28\">28</option>\r\n                <option value=\"29\">29</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"31\">31</option>\r\n              </select>\r\n              <select\r\n                value={formValue.month}\r\n                onChange={changeValue}\r\n                id=\"month\"\r\n                name=\"month\"\r\n              >\r\n                <option value=\"Jan\">January</option>\r\n                <option value=\"Feb\">Febuary</option>\r\n                <option value=\"March\">March</option>\r\n                <option value=\"April\">April</option>\r\n                <option value=\"May\">May</option>\r\n                <option value=\"June\">June</option>\r\n                <option value=\"July\">July</option>\r\n                <option value=\"Aug\">August</option>\r\n                <option value=\"Sept\">September</option>\r\n                <option value=\"Oct\">October</option>\r\n                <option value=\"Nov\">November</option>\r\n                <option value=\"Dec\">December</option>\r\n              </select>\r\n              <select\r\n                value={formValue.year}\r\n                onChange={changeValue}\r\n                id=\"year\"\r\n                name=\"year\"\r\n              >\r\n                <option value=\"2020\">2020</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2018\">2018</option>\r\n                <option value=\"2017\">2017</option>\r\n                <option value=\"2016\">2016</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"error\"> {formValue.error.startDate} </div>\r\n\r\n          <div className=\"row\">\r\n            <label className=\"label text\" htmlFor=\"note\">\r\n              Note\r\n            </label>\r\n            <textarea\r\n              onChange={changeValue}\r\n              id=\"note\"\r\n              value={formValue.note}\r\n              className=\"input\"\r\n              name=\"note\"\r\n              placeholder=\"\"\r\n              style={{ height: \"100%\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"buttonParent\">\r\n            <Link to=\"\" className=\"resetButton button cancelButton\">\r\n              Cancel\r\n            </Link>\r\n\r\n            <div className=\"submit-reset\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button submitButton\"\r\n                id=\"submitButton\"\r\n              >\r\n                {formValue.isUpdate ? \"Update\" : \"Submit\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={reset}\r\n                className=\"resetButton button\"\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(PayrollForm);\r\n","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\index.js",[],["47","48"],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\PayrollService.js",[],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\config\\config.js",[],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\home\\home.jsx",[],"C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\display\\display.jsx",["49"],"import React from \"react\";\r\nimport \"./display.scss\";\r\nimport deleteIcon from \"../../assets/icons/delete-black-18dp.svg\";\r\nimport editIcon from \"../../assets/icons/create-black-18dp.svg\";\r\nimport profile1 from \"../../assets/profile-images/Ellipse -3.png\";\r\nimport profile2 from \"../../assets/profile-images/Ellipse -1.png\";\r\nimport profile3 from \"../../assets/profile-images/Ellipse -8.png\";\r\nimport profile4 from \"../../assets/profile-images/Ellipse -7.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EmployeeService from \"../../PayrollService\";\r\n\r\nconst Display = (props) => {\r\n  \r\n  const employeeService = new EmployeeService();\r\n  const update = (employeeId) => {\r\n    props.history.push(`payroll-form/${employeeId}`);\r\n    console.log('${employeeId}');\r\n  };\r\n  const remove = (employeeId) => {\r\n    employeeService\r\n      .deleteEmployee(employeeId)\r\n      .then((data) => {\r\n        console.log(\"data after delete\", data);\r\n        props.getAllEmployee();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error after delete\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <table id=\"display\" className=\"display\">\r\n      <tbody>\r\n        <tr key={-1}>\r\n          <th></th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>Department</th>\r\n          <th>Salary</th>\r\n          <th>Start Date</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n        {props.employeeArray &&\r\n          props.employeeArray.map((element, ind) => (\r\n            <tr key={ind}>\r\n              <td>\r\n                <img\r\n                  className=\"profile\"\r\n                  src={\r\n                    element.profilePic ===\r\n                    \"../../assets/profile-images/Ellipse -3.png\"\r\n                      ? profile1\r\n                      : element.profilePic ===\r\n                        \"../../assets/profile-images/Ellipse -1.png\"\r\n                      ? profile2\r\n                      : element.profilePic ===\r\n                        \"../../assets/profile-images/Ellipse -8.png\"\r\n                      ? profile3\r\n                      : profile4\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              </td>\r\n              <td>{element.name}</td>\r\n              <td>{element.gender}</td>\r\n              <td>\r\n                {element.departMent &&\r\n                  element.departMent.map((dept) => (\r\n                    <div className=\"dept-label\">{dept}</div>\r\n                  ))}\r\n              </td>\r\n              <td> ₹ {element.salary}</td>\r\n              <td>{element.startDate}</td>\r\n              <td>\r\n               \r\n                <img\r\n                  onClick={() => remove(element.employeeId)}\r\n                  src={deleteIcon}\r\n                  alt=\"delete\"\r\n                />\r\n                <img\r\n                  onClick={() => update(element.employeeId)}\r\n                  src={editIcon}\r\n                  alt=\"edit\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\nexport default withRouter(Display);","C:\\Users\\Deepanshu Singh\\employee-payroll\\src\\components\\home\\header.jsx",[],{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":50,"column":6,"nodeType":"60","endLine":50,"endColumn":8,"suggestions":"61"},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":17,"column":17,"nodeType":"66","messageId":"67","endLine":17,"endColumn":32},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataById' and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["70"],["68"],["69"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getDataById, params.id]",{"range":"73","text":"74"},[1540,1542],"[getDataById, params.id]"]